I"C<p>HashMap的原理很多,特性也有很多，深入探讨也能学到很多设计思想和知识，但今天仅从使用角度来看看它。</p>

<h3 id="hashmap的键值对">HashMap的键值对</h3>

<p>HashMap储存数据的方式是—— 键值对</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">collection</span><span class="o">;</span>
   
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
   
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestCollection</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">dictionary</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">dictionary</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"adc"</span><span class="o">,</span> <span class="s">"物理英雄"</span><span class="o">);</span>
        <span class="n">dictionary</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"apc"</span><span class="o">,</span> <span class="s">"魔法英雄"</span><span class="o">);</span>
        <span class="n">dictionary</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"t"</span><span class="o">,</span> <span class="s">"坦克"</span><span class="o">);</span>
         
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dictionary</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"t"</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="键不能重复值可以重复">键不能重复，值可以重复</h3>

<p>对于HashMap而言，key是唯一的，不可以重复的。 所以，以相同的key 把不同的value插入到 Map中会导致旧元素被覆盖，只留下最后插入的元素。 不过，同一个对象可以作为值插入到map中，只要对应的key不一样</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">collection</span><span class="o">;</span>
  
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
  
<span class="kn">import</span> <span class="nn">charactor.Hero</span><span class="o">;</span>
  
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestCollection</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">heroMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Hero</span><span class="o">&gt;();</span>
         
        <span class="n">heroMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"gareen"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">Hero</span><span class="o">(</span><span class="s">"gareen1"</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">heroMap</span><span class="o">);</span>
         
        <span class="c1">//key为gareen已经有value了，再以gareen作为key放入数据，会导致原英雄，被覆盖</span>
        <span class="c1">//不会增加新的元素到Map中</span>
        <span class="n">heroMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"gareen"</span><span class="o">,</span> <span class="k">new</span> <span class="nc">Hero</span><span class="o">(</span><span class="s">"gareen2"</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">heroMap</span><span class="o">);</span>
         
        <span class="c1">//清空map</span>
        <span class="n">heroMap</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
        <span class="nc">Hero</span> <span class="n">gareen</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Hero</span><span class="o">(</span><span class="s">"gareen"</span><span class="o">);</span>
         
        <span class="c1">//同一个对象可以作为值插入到map中，只要对应的key不一样</span>
        <span class="n">heroMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"hero1"</span><span class="o">,</span> <span class="n">gareen</span><span class="o">);</span>
        <span class="n">heroMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"hero2"</span><span class="o">,</span> <span class="n">gareen</span><span class="o">);</span>
         
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">heroMap</span><span class="o">);</span>
         
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="实际用途">实际用途</h3>

<p>准备一个ArrayList其中存放3000000(三百万个)Hero对象，其名称是随机的,格式是hero-[4位随机数]
hero-3229
hero-6232
hero-9365
…</p>

<p>因为总数很大，所以几乎每种都有重复，把名字叫做 hero-5555的所有对象找出来
要求使用两种办法来寻找</p>

<ul>
  <li>
    <p>不使用HashMap，直接使用for循环找出来，并统计花费的时间</p>
  </li>
  <li>
    <p>借助HashMap，找出结果，并统计花费的时间</p>
  </li>
</ul>

<p>解决：</p>

<p>Map的key是字符串，英雄的名称
Map的value是List,里面放了名称相同的多个英雄</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">collection</span><span class="o">;</span>
  
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
  
<span class="kn">import</span> <span class="nn">charactor.Hero</span><span class="o">;</span>
  
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestCollection</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">hs</span> <span class="o">=</span><span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"初始化开始"</span><span class="o">);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3000000</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">Hero</span> <span class="n">h</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Hero</span><span class="o">(</span>   <span class="s">"hero-"</span> <span class="o">+</span> <span class="n">random</span><span class="o">());</span>
            <span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">h</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="c1">//名字作为key</span>
        <span class="c1">//名字相同的hero，放在一个List中，作为value</span>
        <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;&gt;</span> <span class="n">heroMap</span> <span class="o">=</span><span class="k">new</span> <span class="nc">HashMap</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Hero</span> <span class="n">h</span> <span class="o">:</span> <span class="n">hs</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span> <span class="n">heroMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span> <span class="n">h</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">list</span><span class="o">==</span><span class="kc">null</span><span class="o">){</span>
                <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
                <span class="n">heroMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">h</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">list</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">h</span><span class="o">);</span>
        <span class="o">}</span>
          
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"初始化结束"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"开始查找"</span><span class="o">);</span>
        <span class="n">findByIteration</span><span class="o">(</span><span class="n">hs</span><span class="o">);</span>
        <span class="n">findByMap</span><span class="o">(</span><span class="n">heroMap</span><span class="o">);</span>
          
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="nf">findByMap</span><span class="o">(</span><span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;&gt;</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">List</span> <span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span><span class="n">result</span><span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"hero-5555"</span><span class="o">);</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"通过map查找，一共找到%d个英雄，耗时%d 毫秒%n"</span><span class="o">,</span><span class="n">result</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="nf">findByIteration</span> <span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">hs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">long</span> <span class="n">start</span> <span class="o">=</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Hero</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span><span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span> <span class="o">(</span><span class="nc">Hero</span> <span class="n">h</span> <span class="o">:</span> <span class="n">hs</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">h</span><span class="o">.</span><span class="na">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"hero-5555"</span><span class="o">)){</span>
                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">h</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="kt">long</span> <span class="n">end</span> <span class="o">=</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"通过for查找，一共找到%d个英雄，耗时%d 毫秒%n"</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">random</span><span class="o">(){</span>
        <span class="k">return</span> <span class="o">((</span><span class="kt">int</span><span class="o">)(</span><span class="nc">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()*</span><span class="mi">9000</span><span class="o">)+</span><span class="mi">1000</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

:ET