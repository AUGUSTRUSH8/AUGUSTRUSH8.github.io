I"8S<h3 id="缘起">缘起</h3>
<p>需要检测发票中二维码的位置，以确定图像该怎么旋转，同时也可以为提取二维码信息创造先觉条件！（万恶的需求！）</p>
<h3 id="失败的尝试opencv训练大法">失败的尝试–opencv训练大法</h3>
<p>不感兴趣的可跳过不看！</p>
<ul>
  <li>参考原文：https://blog.csdn.net/qq_27063119/article/details/79247266</li>
  <li>解释：原文作者是训练检测舌头。。（蜜汁尴尬），先通过opencv自带的人脸检测cascade分类器进行人脸检测然后叠加训练的舌头分类器完成舌头的检测任务。不多说。</li>
  <li>我的实践：按照原作者的方法，换个数据集我来尝试一下。</li>
  <li>正样本：一波处理操作后得到以下样本
<img src="https://upload-images.jianshu.io/upload_images/10780978-a1d32dd477d5f2ca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></li>
  <li>负样本：一波骚操作后得到以下样本
<img src="https://upload-images.jianshu.io/upload_images/10780978-e44096898e5d9926.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></li>
  <li>训练文件夹结构
<img src="https://upload-images.jianshu.io/upload_images/10780978-adf8e6650b0e8011.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></li>
  <li>测试效果
<img src="https://upload-images.jianshu.io/upload_images/10780978-61084671efa81476.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></li>
  <li>解释：我解释为训练样本太少，正样本少，负样本也少，原作者说负样本的数量要多于正样本很大一部分，然而我的负样本确实比较少，但我按照模式识别的思想去思考一波，感觉这非常勉强。。。
    <h3 id="成功的尝试">成功的尝试！</h3>
    <h4 id="第一步灵感的来源">第一步：灵感的来源</h4>
  </li>
  <li>原文链接：https://www.jianshu.com/p/604774f7edb5</li>
  <li>关键
<img src="https://upload-images.jianshu.io/upload_images/10780978-0aeccefafe1ec544.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" />
原作者给出了这么个样式，想一想很明显可以迁移学习的。点开之！
链接：http://blog.jobbole.com/80448/
    <h4 id="第二步消化以上实现效果的方法">第二步：消化以上实现效果的方法</h4>
    <p>经过一番浏览以后，作者自己就给出了总体的实现思路，如下：</p>
  </li>
  <li>计算x方向和y方向上的Scharr梯度幅值表示</li>
  <li>将x-gradient减去y-gradient来显示条形码区域</li>
  <li>模糊并二值化图像</li>
  <li>对二值化图像应用闭运算内核</li>
  <li>进行系列的腐蚀、膨胀</li>
  <li>找到图像中的最大轮廓，大概便是条形码
作者最后的实现效果：
<img src="https://upload-images.jianshu.io/upload_images/10780978-139e43733ccc4f75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" />
<img src="https://upload-images.jianshu.io/upload_images/10780978-14d7943d8cd578da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></li>
</ul>

<p>可以看出，思路异常清晰！效果也不错，适合自己的需求。</p>
<h4 id="第三步观察自己的图片">第三步：观察自己的图片</h4>
<p>简单处理后是这样的
<img src="https://upload-images.jianshu.io/upload_images/10780978-6d75abf592faf66b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png" class="center" /></p>

<ul>
  <li>分析：要识别二维码，这个图片当中颜色区分很明显，所以首先需要把蓝色以外的其他色调给去掉！
    <h4 id="第四步写个小脚本仅显示蓝色调">第四步：写个小脚本仅显示蓝色调</h4>
    <p>直接上代码：OnlyBlue.py</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">argparse</span>
<span class="c1"># 蓝色的范围，不同光照条件下不一样，可灵活调整
</span><span class="n">lower_blue</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">90</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">90</span><span class="p">])</span>
<span class="n">upper_blue</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">130</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">])</span>
<span class="n">ap</span><span class="o">=</span><span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">()</span>
<span class="n">ap</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-i"</span><span class="p">,</span> <span class="s">"--image"</span><span class="p">,</span> <span class="n">required</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">help</span> <span class="o">=</span> <span class="s">"path to the image file"</span><span class="p">)</span>
<span class="n">args</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">(</span><span class="n">ap</span><span class="o">.</span><span class="n">parse_args</span><span class="p">())</span>

<span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="s">"image"</span><span class="p">])</span>
<span class="n">hsv</span><span class="o">=</span><span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2HSV</span><span class="p">)</span>

<span class="c1"># 3.inRange()：介于lower/upper之间的为白色，其余黑色
</span><span class="n">mask</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">inRange</span><span class="p">(</span><span class="n">hsv</span><span class="p">,</span> <span class="n">lower_blue</span><span class="p">,</span> <span class="n">upper_blue</span><span class="p">)</span>

<span class="c1"># 4.只保留原图中的蓝色部分
</span><span class="n">res</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">bitwise_and</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">image</span><span class="p">,</span> <span class="n">mask</span><span class="o">=</span><span class="n">mask</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'image'</span><span class="p">,</span> <span class="n">image</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'mask'</span><span class="p">,</span> <span class="n">mask</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'res'</span><span class="p">,</span> <span class="n">res</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'blue.jpg'</span><span class="p">,</span><span class="n">res</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<p>以上代码参考自：<a href="http://ex2tron.top/2017/12/07/Python-OpenCV%E6%95%99%E7%A8%8B5%EF%BC%9A%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E8%BD%AC%E6%8D%A2/">传送门</a>
也是很好的一篇博客，感兴趣的可以看看</p>

<ul>
  <li>解释：由于我这里是比较浅的蓝色调，因此更改了原来代码当中的上下阈值定义部分，如下：</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 蓝色的范围，不同光照条件下不一样，可灵活调整
</span><span class="n">lower_blue</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">90</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">90</span><span class="p">])</span>
<span class="n">upper_blue</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">130</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">])</span>
</code></pre></div></div>

<ul>
  <li>效果</li>
</ul>

<p><img src="https://upload-images.jianshu.io/upload_images/10780978-292916417a06242e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/378/format/webp" alt="img" /></p>

<p>这效果我感觉后面已经可以处理了，遂没有再去调阈值参数。</p>

<h4 id="第五步写检测二维码的程序脚本">第五步：写检测二维码的程序脚本</h4>

<p>直接上代码：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">argparse</span>
<span class="kn">import</span> <span class="nn">cv2</span>
<span class="n">ap</span><span class="o">=</span><span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">()</span>
<span class="n">ap</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-i"</span><span class="p">,</span> <span class="s">"--image"</span><span class="p">,</span> <span class="n">required</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">help</span> <span class="o">=</span> <span class="s">"path to the image file"</span><span class="p">)</span>
<span class="n">args</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">(</span><span class="n">ap</span><span class="o">.</span><span class="n">parse_args</span><span class="p">())</span>

<span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">args</span><span class="p">[</span><span class="s">"image"</span><span class="p">])</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>

<span class="n">gradX</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">Sobel</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="n">ddepth</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CV_32F</span><span class="p">,</span> <span class="n">dx</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">dy</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">ksize</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="n">gradY</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">Sobel</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="n">ddepth</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">CV_32F</span><span class="p">,</span> <span class="n">dx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">dy</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">ksize</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>

<span class="n">gradient</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">subtract</span><span class="p">(</span><span class="n">gradX</span><span class="p">,</span> <span class="n">gradY</span><span class="p">)</span>
<span class="n">gradient</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">convertScaleAbs</span><span class="p">(</span><span class="n">gradient</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"gradient"</span><span class="p">,</span><span class="n">gradient</span><span class="p">)</span>
<span class="c1">#原本没有过滤颜色通道的时候，这个高斯模糊有效，但是如果进行了颜色过滤，不用高斯模糊效果更好
#blurred = cv2.blur(gradient, (9, 9))
</span><span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">thresh</span><span class="p">)</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">threshold</span><span class="p">(</span><span class="n">gradient</span><span class="p">,</span> <span class="mi">225</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">THRESH_BINARY</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"thresh"</span><span class="p">,</span><span class="n">thresh</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'thresh.jpg'</span><span class="p">,</span><span class="n">thresh</span><span class="p">)</span>

<span class="n">kernel</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">getStructuringElement</span><span class="p">(</span><span class="n">cv2</span><span class="o">.</span><span class="n">MORPH_RECT</span><span class="p">,</span> <span class="p">(</span><span class="mi">21</span><span class="p">,</span> <span class="mi">21</span><span class="p">))</span>
<span class="n">closed</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">morphologyEx</span><span class="p">(</span><span class="n">thresh</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">MORPH_CLOSE</span><span class="p">,</span> <span class="n">kernel</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"closed"</span><span class="p">,</span><span class="n">closed</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'closed.jpg'</span><span class="p">,</span><span class="n">closed</span><span class="p">)</span>

<span class="n">closed</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">erode</span><span class="p">(</span><span class="n">closed</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">iterations</span> <span class="o">=</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">closed</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">dilate</span><span class="p">(</span><span class="n">closed</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">iterations</span> <span class="o">=</span> <span class="mi">4</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">'closed1.jpg'</span><span class="p">,</span><span class="n">closed</span><span class="p">)</span>

<span class="n">img</span><span class="p">,</span><span class="n">cnts</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">findContours</span><span class="p">(</span><span class="n">closed</span><span class="o">.</span><span class="n">copy</span><span class="p">(),</span> <span class="n">cv2</span><span class="o">.</span><span class="n">RETR_EXTERNAL</span><span class="p">,</span><span class="n">cv2</span><span class="o">.</span><span class="n">CHAIN_APPROX_SIMPLE</span><span class="p">)</span>
<span class="n">c</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">cnts</span><span class="p">,</span> <span class="n">key</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">contourArea</span><span class="p">,</span> <span class="n">reverse</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

<span class="n">rect</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">minAreaRect</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="n">box</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">int0</span><span class="p">(</span><span class="n">cv2</span><span class="o">.</span><span class="n">boxPoints</span><span class="p">(</span><span class="n">rect</span><span class="p">))</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">drawContours</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="p">[</span><span class="n">box</span><span class="p">],</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imwrite</span><span class="p">(</span><span class="s">"final.jpg"</span><span class="p">,</span><span class="n">image</span><span class="p">)</span>
<span class="n">cv2</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">"Image"</span><span class="p">,</span> <span class="n">image</span><span class="p">)</span>

<span class="n">cv2</span><span class="o">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="关键错误bug解决">关键错误bug解决</h4>

<p>原作者文中的代码运行起来有些问题，主要以下两个</p>

<ul>
  <li>
    <p>关于 Python opencv 使用中的 ValueError: too many values to unpack</p>

    <ul>
      <li>解决链接：<a href="https://blog.csdn.net/jjddss/article/details/72674704">https://blog.csdn.net/jjddss/article/details/72674704</a></li>
      <li>关键部分</li>
    </ul>

    <p><img src="https://upload-images.jianshu.io/upload_images/10780978-a09876db5b609172.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/885/format/webp" alt="img" /></p>
  </li>
  <li>
    <p>Why can’t use <code class="highlighter-rouge">cv2.cv.BoxPoints</code> in OpenCV (Python)?</p>
  </li>
  <li>
    <p>解决链接：<a href="https://stackoverflow.com/questions/48056956/why-cant-use-cv2-cv-boxpoints-in-opencv-python">传送门</a></p>
  </li>
  <li>
    <p>关键部分</p>
  </li>
</ul>

<p><img src="https://upload-images.jianshu.io/upload_images/10780978-b7a4c7821042800c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/736/format/webp" alt="img" /></p>

<h3 id="第六步测试效果">第六步：测试效果</h3>

<p><img src="https://upload-images.jianshu.io/upload_images/10780978-7fcd721f55e444a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/380/format/webp" alt="img" /></p>

<p>效果很成功！</p>
:ET